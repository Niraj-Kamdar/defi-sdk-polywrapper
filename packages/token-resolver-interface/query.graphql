type Token {
  address: String!
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigInt!
}

type TokenValue {
  currency: String!
  price: String!  # BigDecimal
  value: String!  # BigDecimal
}

type TokenBalance {
  token: Token!
  balance: String!  # BigDecimal
  values: [TokenValue!]!
}

type AssetBalance {
  token: TokenBalance!
  apy: String
  apr: String
  isDebt: Boolean!
  components: [TokenBalance!]
  claimableTokens: [TokenBalance!]
}

type Query {
  getTokenComponents(
    token: Token!
    multiplier: Int  # multiply all the underlying token amount with the multiplier (default: 1)
    vsCurrencies: [String!]  # If specified returns price of token in the list of given currencies.
  ): AssetBalance!
}