type Module {
  """
  Returns the effective token components balance in the currencies given by client for the given token
  """
  getTokenComponents(
    """
    Address of the asset
    """
    tokenAddress: String!
    """
    ID of the asset protocol, as listed in protocol resolver
    """
    protocolId: String!
  ): TokenComponent! @env(required: true)

  """
  Returns true if the given token is a valid protocol token
  """
  isValidProtocolToken(
    """
    Address of the asset
    """
    tokenAddress: String!
    """
    ID of the asset protocol, as listed in protocol resolver
    """
    protocolId: String!
  ): Boolean! @env(required: true)
}

"""
An asset and its underlying components, each of which contains the exchange rate between the asset and the component
"""
type TokenComponent {
  """
  Address of the asset
  """
  tokenAddress: String!
  """
  Number of underlying components that could not be resolved; the higher the number, the higher the inaccuracy
  """
  unresolvedComponents: Int!
  """
  Underlying components
  """
  components: [TokenComponent!]!
  """
  Rate of exchange between parent asset and this asset
  """
  rate: String! # BigDecimal
}
