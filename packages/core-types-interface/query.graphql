type Token {
  address: String!
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigInt!
}

type Protocol {
  id: String!
  organization: String!
  name: String!
  version: String!
  adapterUri: String
  forkedFrom: Protocol
}

type TokenValue {
  currency: String!
  price: String!  # BigDecimal
  value: String!  # BigDecimal
}

type TokenBalance {
  token: Token!
  balance: String!  # BigDecimal
  values: [TokenValue!]
}

type AssetBalance {
  token: TokenBalance!
  apy: String
  apr: String
  isDebt: Boolean!
  """
  unresolvedComponenets: No. of components that could not be resolved 
  Note: Higher the number, higher the inaccuracy
  """
  unresolvedComponents: Int!
  components: [TokenBalance!]
  claimableTokens: [TokenBalance!]
}

type AccountBalance {
  account: String!
  network: String!
  balances: [AssetBalance!]!
}